{"version":3,"sources":["images/add.svg","images/renew.svg","images/trash-can.svg","images/search.svg","images/overflow-menu--vertical.svg","components/MediaPlayer.js","components/SearchBox.js","components/Nav.js","components/Form.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MediaPlayer","props","state","speed","player","React","createRef","this","url","includes","className","controls","slice","ref","c","src","onChange","e","newSpeed","parseFloat","target","value","setState","audio","playbackRate","Component","search","query","window","location","SearchBox","useState","setQuery","id","onClick","searchIcon","alt","type","name","placeholder","event","onKeyUp","key","wasEnterClicked","Nav","refresh","reloadIcon","clearForm","addIcon","confirmDelete","trashIcon","Form","getKeywords","a","async","fetch","res","json","i","formattedKeywords","map","word","label","keywordOptions","formatLink","link","keywords","split","minifyLink","console","error","keywordArray","forEach","obj","push","join","getRandomLink","history","replaceState","getLink","Number","isNaN","parseInt","Error","changeHandler","newLink","handleEditorChange","content","editor","updateLink","preventDefault","requestOptions","method","headers","body","JSON","stringify","then","response","data","toast","title","catch","confirmAlert","message","buttons","deleteLink","takeaways","datesAccessed","keywordSelected","selected","sort","b","keyword","capitalizeFirstLetter","str","toUpperCase","prevProps","onEnded","htmlFor","values","multi","options","create","onCreateNew","log","style","color","apiKey","init","height","menubar","plugins","toolbar","onEditorChange","App","path","render","match","params","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mHAAAA,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,sGCA3CD,EAAOC,QAAU,IAA0B,qD,qMCOtBC,G,mBACnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,MAAO,EACPC,OAAQC,IAAMC,aAJC,E,sEAOT,IAAD,OAEP,OAAKC,KAAKN,MAAMO,IAGZD,KAAKN,MAAMO,IAAIC,SAAS,SAExB,yBAAKC,UAAU,gBACb,kBAAC,IAAD,CAAaF,IAAKD,KAAKN,MAAMO,IAAKG,UAAU,KAGV,SAA7BJ,KAAKN,MAAMO,IAAII,OAAO,GAE7B,yBAAKF,UAAU,gBACb,kBAAC,IAAD,CACEG,IAAK,SAACC,GAAD,OAAQ,EAAKV,OAASU,GAC3BC,IAAKR,KAAKN,MAAMO,MAGlB,4BACEQ,SAAU,SAACC,GACT,IAAMC,EAAWC,WAAWF,EAAEG,OAAOC,OAErC,EAAKC,SAAS,CACZnB,MAAOe,IAET,EAAKd,OAAOmB,MAAMC,aAAeN,GAEnCG,MAAOd,KAAKL,MAAMC,OAElB,4BAAQkB,MAAM,OAAd,QACA,4BAAQA,MAAM,OAAd,QACA,4BAAQA,MAAM,KAAd,MACA,4BAAQA,MAAM,QAAd,SACA,4BAAQA,MAAM,OAAd,QACA,4BAAQA,MAAM,QAAd,SACA,4BAAQA,MAAM,KAAd,QAKC,wCAtCA,wBAAIX,WAAS,GAAb,gB,GAX4Be,c,uJCFnCC,EAAS,SAACC,GAEdC,OAAOC,SAAP,oEAA+EF,IA+BlEG,EA1BG,SAAC7B,GAAW,IAAD,EACD8B,mBAAS,IADR,mBACpBJ,EADoB,KACbK,EADa,KAG3B,OACE,yBAAKtB,UAAU,cACb,kBAAC,IAAD,KACE,4BAAQuB,GAAG,SAASC,QAAS,kBAAMR,EAAOC,KACxC,yBAAKZ,IAAKoB,IAAYC,IAAI,aAI9B,2BACEH,GAAG,QACHI,KAAK,OACLC,KAAK,QACL5B,UAAU,cACV6B,YAAY,SACZvB,SAAU,SAACwB,GAAD,OAAWR,EAASQ,EAAMpB,OAAOC,QAC3CoB,QAAS,SAACD,IApBM,SAACA,GAAD,MAAyB,UAAdA,EAAME,KAqB/BC,CAAgBH,IAAUd,EAAOc,EAAMpB,OAAOC,YCazCuB,MApCf,SAAa3C,GACX,OACE,yBAAKS,UAAU,WACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,kBACb,kBAAC,IAAD,KACE,4BAAQuB,GAAG,UAAUC,QAASjC,EAAM4C,SAClC,yBAAK9B,IAAK+B,IAAYV,IAAI,aAG9B,kBAAC,IAAD,KACE,4BAAQH,GAAG,MAAMC,QAASjC,EAAM8C,WAC9B,yBAAKhC,IAAKiC,IAASZ,IAAI,UAG3B,kBAAC,IAAD,KACE,4BAAQH,GAAG,SAASvB,UAAU,SAASwB,QAASjC,EAAMgD,eACpD,yBAAKlC,IAAKmC,IAAWd,IAAI,gB,SCdhBe,E,YACnB,WAAYlD,GAAQ,IAAD,8BACjB,4CAAMA,KA4BRmD,YAAc,gCAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACME,MAChB,8DAFU,cACNC,EADM,kBAAAH,EAAA,MAIOG,EAAIC,QAJX,OAINA,EAJM,OAKRC,EAAI,EACFC,EAAoBF,EAAKG,KAAI,SAACC,GAClC,MAAO,CAAE5B,GAAIyB,IAAKI,MAAOD,EAAMxC,MAAOwC,MAExC,EAAKvC,SAAS,CAAEyC,eAAgBJ,IATpB,sCA7BK,EAyCnBK,WAAa,SAACC,GACPA,EAAKC,SAGRD,EAAKC,SAAWD,EAAKC,SAASC,MAAM,KAFpCF,EAAKC,SAAW,GAIlB,IAAIR,EAAI,EAIR,OAHAO,EAAKC,SAAWD,EAAKC,SAASN,KAAI,SAACC,GACjC,MAAO,CAAE5B,GAAIyB,IAAKI,MAAOD,EAAMxC,MAAOwC,MAEjCI,GAnDU,EAsDnBG,WAAa,SAACH,GACPA,EAAKC,UACRG,QAAQC,MAAML,GAEhB,IAAMM,EAAe,GAKrB,OAJAN,EAAKC,SAASM,SAAQ,SAACC,GACrBF,EAAaG,KAAKD,EAAIpD,UAExB4C,EAAKC,SAAWK,EAAaI,KAAK,KAC3BV,GA/DU,EAkEnBW,cAAgB,4BAAAvB,EAAAC,OAAA,kEAAAD,EAAA,MACIE,MAChB,iEAFY,cACRC,EADQ,kBAAAH,EAAA,MAIKG,EAAIC,QAJT,cAIRQ,EAJQ,OAKdrC,OAAOiD,QAAQC,aAAa,KAAM,iBAAlC,gBAA6Db,EAAKhC,KALpD,kBAMP,EAAK+B,WAAWC,IANT,sCAlEG,EA2EnBc,QAAU,SAAO9C,GAAP,iBAAAoB,EAAAC,OAAA,kEAAAD,EAAA,MACUE,MAAM,yDAAD,OACoCtB,KAFnD,cACFuB,EADE,kBAAAH,EAAA,MAIWG,EAAIC,QAJf,cAIFQ,EAJE,yBAKD,EAAKD,WAAWC,IALf,sCA3ES,EAmFnBpB,QAAU,SAAOZ,GAAP,eAAAoB,EAAAC,OAAA,mDAEH0B,OAAOC,MAAMC,SAASjD,IAFnB,kCAAAoB,EAAA,MAGO,EAAK0B,QAAQG,SAASjD,KAH7B,OAGNgC,EAHM,+CAAAZ,EAAA,MAKO,EAAKuB,iBALZ,OAKNX,EALM,iBAOHA,EAPG,uBAQA,IAAIkB,MAAM,sBARV,QAUR,EAAK7D,SAAS,CAAE2C,KAAMA,IAVd,uCAnFS,EAgGnBmB,cAAgB,SAAC5C,GACf,IAAMF,EAAOE,EAAMpB,OAAOkB,KACpBjB,EAAQmB,EAAMpB,OAAOC,MAErBgE,EAAU,EAAKnF,MAAM+D,KAC3BoB,EAAQ/C,GAAQjB,EAChB,EAAKC,SAAS,CACZ2C,KAAMoB,KAvGS,EA0GnBC,mBAAqB,SAACC,EAASC,GAC7B,IAAMH,EAAU,EAAKnF,MAAM+D,KAC3BoB,EAAO,UAAgBE,EACvB,EAAKjE,SAAS,CACZ2C,KAAMoB,KA9GS,EAkHnBI,WAAa,SAAOjD,GAAP,eAAAa,EAAAC,OAAA,gDACXd,EAAMkD,iBACAC,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,EAAK5B,WAAL,eAAqB,EAAKlE,MAAM+D,SAIvDV,MACE,+DACAoC,GAECM,MAAK,SAACC,GAAD,OAAcA,EAASzC,UAC5BwC,MAAK,SAACE,GACLC,YAAM,iBAAD,OAAkB,EAAKlG,MAAM+D,KAAKoC,MAAlC,SAENC,OAAM,SAAChC,GACND,QAAQC,MAAMA,GACd8B,YAAM,+BAnBC,sCAlHM,EAyInBnD,cAAgB,WACdsD,uBAAa,CACXF,MAAM,WAAD,OAAa,EAAKnG,MAAM+D,KAAKoC,MAA7B,MACLG,QAAS,GACTC,QAAS,CACP,CACE3C,MAAO,MACP5B,QAAS,WACP,EAAKwE,eAGT,CACE5C,MAAO,KACP5B,QAAS,kBAtJE,EA6JnBwE,WAAa,0BAAArD,EAAAC,OAAA,gDACLqC,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnB/D,GAAI,EAAK/B,MAAM+D,KAAKhC,MAIxBsB,MACE,+DACAoC,GAECM,MAAK,SAACC,GAAD,OAAcA,EAASzC,UAC5BwC,MAAK,SAACE,GACLC,YAAM,iBAAD,OAAkB,EAAKlG,MAAM+D,KAAKoC,MAAlC,SAENC,OAAM,SAAChC,GACND,QAAQC,MAAMA,GACd8B,YAAM,+BAnBC,sCA7JM,EAoLnBrD,UAAY,WACV,EAAKzB,SAAS,CACZ2C,KAAM,CACJ0C,UAAW,GACXN,MAAO,GACP7F,IAAK,GACL0D,SAAU,GACV0C,cAAe,OA3LF,EAmMnBC,gBAAkB,SAACC,GACjBA,EAAWA,EAASC,MAAK,SAAC1D,EAAG2D,GAC3B,OAAO3D,EAAES,MAAQkD,EAAElD,OAAS,EAAI,KAElC,IAAMG,EAAI,eAAQ,EAAK/D,MAAM+D,MAC7BA,EAAKC,SAAW4C,EAASlD,KAAI,SAACqD,GAC5B,OAAIA,GAA8B,kBAAZA,EACb,eACFA,EADL,CAEEnD,MAAO,EAAKoD,sBAAsBD,EAAQnD,OAC1CzC,MAAO,EAAK6F,sBAAsBD,EAAQ5F,SAGrC,CACLY,GAAIgF,EACJ5F,MAAO4F,EACPnD,MAAOmD,MAIb,EAAK3F,SAAS,CAAE2C,UAvNC,EAyNnBiD,sBAAwB,SAACC,GACvB,OAAOA,EAAI,GAAGC,cAAgBD,EAAIvG,MAAM,IAxNxC,EAAKV,MAAQ,CACX+D,KAAM,CACJC,SAAU,CAAC,CAAEjC,GAAI,GAAI6B,MAAO,cAAezC,MAAO,gBAClDgF,MAAO,uCACP7F,IAAK,8CACLmG,UACE,yFACFC,cAAe,CAAC,WAChB3E,GAAI,GAEN8B,eAAgB,IAZD,E,iFAiBjBxD,KAAK6C,cACiB,MAAlB7C,KAAKN,MAAMgC,IACb1B,KAAKsC,QAAQtC,KAAKN,MAAMgC,M,yCAIToF,GACb9G,KAAKN,MAAMgC,KAAOoF,EAAUpF,IAC9B1B,KAAKsC,QAAQtC,KAAKN,MAAMgC,M,+BAqM1B,OACE,yBAAKvB,UAAU,iBACb,yBAAKA,UAAU,kBACb,kBAAC,EAAD,CACEmC,QAAStC,KAAKsC,QACdI,cAAe1C,KAAK0C,cACpBF,UAAWxC,KAAKwC,YAElB,kBAAC,EAAD,CACErC,UAAU,cACVF,IAAKD,KAAKL,MAAM+D,KAAKzD,KAAO,GAC5B8G,QAAS/G,KAAKkF,aAEhB,0BAAM/E,UAAU,QACd,2BAAO6G,QAAQ,SAAf,SACA,2BACEtF,GAAG,QACHI,KAAK,OACLC,KAAK,QACL5B,UAAU,oBACVW,MAAOd,KAAKL,MAAM+D,KAAKoC,OAAS,GAChCrF,SAAUT,KAAK6E,gBAEjB,2BAAOmC,QAAQ,OAAf,OACA,2BACEtF,GAAG,MACHI,KAAK,MACLC,KAAK,MACL5B,UAAU,oBACVW,MAAOd,KAAKL,MAAM+D,KAAKzD,KAAO,GAC9BQ,SAAUT,KAAK6E,gBAEjB,2BAAOmC,QAAQ,YAAf,YACA,yBAAKtF,GAAG,WAAWvB,UAAU,YAC3B,kBAAC,IAAD,CACE8G,OAAQjH,KAAKL,MAAM+D,KAAKC,SACxBuD,OAAO,EACPC,QAASnH,KAAKL,MAAM6D,gBAAkB,GACtC/C,SAAUT,KAAKsG,gBACfc,QAAQ,EACRC,YAAa,SAACnD,GACZJ,QAAQwD,IAAIpD,OAKlB,2BAAO8C,QAAQ,iBAAf,SACA,uBAAGtF,GAAG,iBAAiB1B,KAAKL,MAAM+D,KAAK2C,eACvC,2BAAOW,QAAQ,YAAYO,MAAO,CAAEC,MAAO,UAA3C,aAGA,yBAAKrH,UAAU,eACb,kBAAC,IAAD,CACEsH,OAAO,mDACPC,KAAM,CACJC,OAAQ,IACRC,SAAS,EACTC,QAAS,CACP,iEACA,6CACA,wDAEFC,QAAS,gLAIX/F,KAAK,YACLjB,MAAOd,KAAKL,MAAM+D,KAAK0C,WAAa,GACpC2B,eAAgB/H,KAAK+E,sBAGzB,4BACErD,GAAG,SACHI,KAAK,SACLC,KAAK,SACLJ,QAAS3B,KAAKkF,YAJhB,WASF,kBAAC,IAAD,Y,GA/SwBhE,aCYnB8G,MAlBf,SAAatI,GACX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEuI,KAAK,YACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAe,kBAAC,EAAD,CAAMzG,GAAIyG,EAAMC,OAAO1G,QAEhD,kBAAC,IAAD,CACEuG,KAAK,OACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAe,kBAAC,EAAD,CAAMzG,GAAIyG,EAAMC,OAAO1G,QAEhD,kBAAC,IAAD,CAAOuG,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,EAAD,CAAMxG,GAAG,YCL3B2G,QACW,cAA7BhH,OAAOC,SAASgH,UAEe,UAA7BjH,OAAOC,SAASgH,UAEhBjH,OAAOC,SAASgH,SAASH,MACvB,2DCZNI,IAASL,OACP,kBAAC,IAAMM,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnD,MAAK,SAAAoD,GACjCA,EAAaC,kB","file":"static/js/main.dbef3246.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add.b8be3259.svg\";","module.exports = __webpack_public_path__ + \"static/media/renew.89760865.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash-can.c4a9197b.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.9757a878.svg\";","module.exports = __webpack_public_path__ + \"static/media/overflow-menu--vertical.f1ad3b28.svg\";","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactPlayer from \"react-player\";\n// import AudioPlayer from \"./AudioPlayer\";\nimport ReactAudioPlayer from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\n\nexport default class MediaPlayer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      speed: 1,\n      player: React.createRef(),\n    };\n  }\n  render() {\n    // initial load: it doesn't do a/th\n    if (!this.props.url) {\n      return <h3 className>No media</h3>;\n    }\n    if (this.props.url.includes(\"youtu\")) {\n      return (\n        <div className=\"media-player\">\n          <ReactPlayer url={this.props.url} controls={true} />\n        </div>\n      );\n    } else if (this.props.url.slice(-4) === \".mp3\") {\n      return (\n        <div className=\"media-player\">\n          <ReactAudioPlayer\n            ref={(c) => (this.player = c)}\n            src={this.props.url}\n          />\n\n          <select\n            onChange={(e) => {\n              const newSpeed = parseFloat(e.target.value);\n              debugger;\n              this.setState({\n                speed: newSpeed,\n              });\n              this.player.audio.playbackRate = newSpeed;\n            }}\n            value={this.state.speed}\n          >\n            <option value=\"0.5\">0.5x</option>\n            <option value=\"0.9\">0.9x</option>\n            <option value=\"1\">1x</option>\n            <option value=\"1.25\">1.25x</option>\n            <option value=\"1.5\">1.5x</option>\n            <option value=\"1.75\">1.75x</option>\n            <option value=\"2\">2x</option>\n          </select>\n        </div>\n      );\n    } else {\n      return <h3>No media</h3>;\n    }\n  }\n}\n\nMediaPlayer.propTypes = {\n  url: PropTypes.string,\n};\n","import React, { useState } from \"react\";\nimport Ripple from \"react-touch-ripple\";\nimport searchIcon from \"../images/search.svg\";\nimport { useHistory } from \"react-router-dom\";\n\nconst search = (query) => {\n  // TODO: redirect to the search page\n  window.location = `https://fullchee-reminders-backend.herokuapp.com/search?q=${query}`;\n};\n\nconst wasEnterClicked = (event) => event.key === \"Enter\";\n\nconst SearchBox = (props) => {\n  const [query, setQuery] = useState(\"\");\n\n  return (\n    <div className=\"search-box\">\n      <Ripple>\n        <button id=\"search\" onClick={() => search(query)}>\n          <img src={searchIcon} alt=\"search\" />\n          {/* <label htmlFor=\"query\">Search</label> */}\n        </button>\n      </Ripple>\n      <input\n        id=\"query\"\n        type=\"text\"\n        name=\"query\"\n        className=\"input--text\"\n        placeholder=\"Search\"\n        onChange={(event) => setQuery(event.target.value)}\n        onKeyUp={(event) => {\n          wasEnterClicked(event) && search(event.target.value);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport addIcon from \"../images/add.svg\";\nimport reloadIcon from \"../images/renew.svg\";\nimport overflowIcon from \"../images/overflow-menu--vertical.svg\";\nimport trashIcon from \"../images/trash-can.svg\";\nimport Ripple from \"react-touch-ripple\";\nimport SearchBox from \"./SearchBox\";\nfunction Nav(props) {\n  return (\n    <nav className=\"buttons\">\n      <SearchBox />\n      <div className=\"buttons__icons\">\n        <Ripple>\n          <button id=\"refresh\" onClick={props.refresh}>\n            <img src={reloadIcon} alt=\"reload\" />\n          </button>\n        </Ripple>\n        <Ripple>\n          <button id=\"add\" onClick={props.clearForm}>\n            <img src={addIcon} alt=\"add\" />\n          </button>\n        </Ripple>\n        <Ripple>\n          <button id=\"delete\" className=\"delete\" onClick={props.confirmDelete}>\n            <img src={trashIcon} alt=\"delete\" />\n          </button>\n        </Ripple>\n        {/* <Ripple>\n        <button id=\"overflow\" onClick={props.clearForm}>\n          <img src={overflowIcon} alt=\"click for more\" />\n        </button>\n      </Ripple> */}\n      </div>\n    </nav>\n  );\n}\n\nNav.propTypes = {\n  clearForm: PropTypes.func,\n  confirmDelete: PropTypes.func,\n  refresh: PropTypes.func,\n};\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport MediaPlayer from \"./MediaPlayer\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Select from \"react-dropdown-select\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport Nav from \"./Nav\";\nimport { Editor } from \"@tinymce/tinymce-react\";\n\nexport default class Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      link: {\n        keywords: [{ id: 12, label: \"Perspective\", value: \"Perspective\" }],\n        title: \"This is Water - David Foster Wallace\",\n        url: \"https://www.youtube.com/watch?v=ms2BvRbjOYo\",\n        takeaways:\n          \"Really reminded me of meditative practices. \\n\\nGreat advice, takes practice to follow\",\n        datesAccessed: [\"2019-08\"],\n        id: 0,\n      },\n      keywordOptions: [],\n    };\n  }\n\n  componentDidMount() {\n    this.getKeywords();\n    if (this.props.id !== \"0\") {\n      this.refresh(this.props.id);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.id !== prevProps.id) {\n      this.refresh(this.props.id);\n    }\n  }\n\n  getKeywords = async () => {\n    const res = await fetch(\n      \"https://fullchee-reminders-backend.herokuapp.com/keywords\"\n    );\n    const json = await res.json();\n    let i = 0;\n    const formattedKeywords = json.map((word) => {\n      return { id: i++, label: word, value: word };\n    });\n    this.setState({ keywordOptions: formattedKeywords });\n  };\n\n  formatLink = (link) => {\n    if (!link.keywords) {\n      link.keywords = [];\n    } else {\n      link.keywords = link.keywords.split(\",\");\n    }\n    let i = 0;\n    link.keywords = link.keywords.map((word) => {\n      return { id: i++, label: word, value: word };\n    });\n    return link;\n  };\n\n  minifyLink = (link) => {\n    if (!link.keywords) {\n      console.error(link);\n    }\n    const keywordArray = [];\n    link.keywords.forEach((obj) => {\n      keywordArray.push(obj.value);\n    });\n    link.keywords = keywordArray.join(\",\");\n    return link;\n  };\n\n  getRandomLink = async () => {\n    const res = await fetch(\n      \"https://fullchee-reminders-backend.herokuapp.com/random-link\"\n    );\n    const link = await res.json();\n    window.history.replaceState(null, \"New Page Title\", `/link/${link.id}`);\n    return this.formatLink(link);\n  };\n\n  getLink = async (id) => {\n    const res = await fetch(\n      `https://fullchee-reminders-backend.herokuapp.com/link/${id}`\n    );\n    const link = await res.json();\n    return this.formatLink(link);\n  };\n\n  refresh = async (id) => {\n    let link;\n    if (!Number.isNaN(parseInt(id))) {\n      link = await this.getLink(parseInt(id));\n    } else {\n      link = await this.getRandomLink();\n    }\n    if (!link) {\n      throw new Error(\"Got an empty link.\");\n    }\n    this.setState({ link: link });\n  };\n\n  changeHandler = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    const newLink = this.state.link;\n    newLink[name] = value;\n    this.setState({\n      link: newLink,\n    });\n  };\n  handleEditorChange = (content, editor) => {\n    const newLink = this.state.link;\n    newLink[\"takeaways\"] = content;\n    this.setState({\n      link: newLink,\n    });\n  };\n\n  updateLink = async (event) => {\n    event.preventDefault();\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(this.minifyLink({ ...this.state.link })),\n    };\n    debugger;\n\n    fetch(\n      \"https://fullchee-reminders-backend.herokuapp.com/update-link\",\n      requestOptions\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        toast(`Updated link: ${this.state.link.title}!`);\n      })\n      .catch((error) => {\n        console.error(error);\n        toast(\"Couldn't update the link\");\n      });\n  };\n\n  confirmDelete = () => {\n    confirmAlert({\n      title: `Delete \"${this.state.link.title}\"?`,\n      message: \"\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => {\n            this.deleteLink();\n          },\n        },\n        {\n          label: \"No\",\n          onClick: () => {\n            return;\n          },\n        },\n      ],\n    });\n  };\n  deleteLink = async () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        id: this.state.link.id,\n      }),\n    };\n\n    fetch(\n      \"https://fullchee-reminders-backend.herokuapp.com/delete-link\",\n      requestOptions\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        toast(`Deleted link: ${this.state.link.title}!`);\n      })\n      .catch((error) => {\n        console.error(error);\n        toast(\"Couldn't delete the link\");\n      });\n  };\n\n  clearForm = () => {\n    this.setState({\n      link: {\n        takeaways: \"\",\n        title: \"\",\n        url: \"\",\n        keywords: [],\n        datesAccessed: [],\n      },\n    });\n  };\n\n  /**\n   * Update the keywords of the link\n   */\n  keywordSelected = (selected) => {\n    selected = selected.sort((a, b) => {\n      return a.label > b.label ? -1 : 1;\n    });\n    const link = { ...this.state.link };\n    link.keywords = selected.map((keyword) => {\n      if (keyword && typeof keyword === \"object\") {\n        return {\n          ...keyword,\n          label: this.capitalizeFirstLetter(keyword.label),\n          value: this.capitalizeFirstLetter(keyword.value),\n        };\n      } else {\n        return {\n          id: keyword,\n          value: keyword,\n          label: keyword,\n        };\n      }\n    });\n    this.setState({ link });\n  };\n  capitalizeFirstLetter = (str) => {\n    return str[0].toUpperCase() + str.slice(1);\n  };\n\n  render() {\n    return (\n      <div className=\"App container\">\n        <div className=\"form-container\">\n          <Nav\n            refresh={this.refresh}\n            confirmDelete={this.confirmDelete}\n            clearForm={this.clearForm}\n          />\n          <MediaPlayer\n            className=\"mediaPlayer\"\n            url={this.state.link.url || \"\"}\n            onEnded={this.updateLink}\n          ></MediaPlayer>\n          <form className=\"form\">\n            <label htmlFor=\"title\">Title</label>\n            <input\n              id=\"title\"\n              type=\"text\"\n              name=\"title\"\n              className=\"input input--text\"\n              value={this.state.link.title || \"\"}\n              onChange={this.changeHandler}\n            />\n            <label htmlFor=\"url\">URL</label>\n            <input\n              id=\"url\"\n              type=\"url\"\n              name=\"url\"\n              className=\"input input--text\"\n              value={this.state.link.url || \"\"}\n              onChange={this.changeHandler}\n            />\n            <label htmlFor=\"keywords\">Keywords</label>\n            <div id=\"keywords\" className=\"keywords\">\n              <Select\n                values={this.state.link.keywords}\n                multi={true}\n                options={this.state.keywordOptions || []}\n                onChange={this.keywordSelected}\n                create={true}\n                onCreateNew={(obj) => {\n                  console.log(obj);\n                  // TODO: add a new item\n                }}\n              />\n            </div>\n            <label htmlFor=\"datesAccessed\">Dates</label>\n            <p id=\"datesAccessed\">{this.state.link.datesAccessed}</p>\n            <label htmlFor=\"takeaways\" style={{ color: \"white\" }}>\n              Takeaways\n            </label>\n            <div className=\"text-editor\">\n              <Editor\n                apiKey=\"mhoop81tplrihnhuphy89bsw7qjq01dhzkjdzgb61ruf4itq\"\n                init={{\n                  height: 400,\n                  menubar: false,\n                  plugins: [\n                    \"advlist autolink lists link image charmap print preview anchor\",\n                    \"searchreplace visualblocks code fullscreen\",\n                    \"insertdatetime media table paste code help wordcount\",\n                  ],\n                  toolbar: `undo redo | formatselect | bold italic backcolor |` + \n             `alignleft aligncenter alignright alignjustify |` + \n             `bullist numlist outdent indent | removeformat | help | image insertdatetime`,\n                }}\n                name=\"takeaways\"\n                value={this.state.link.takeaways || \"\"}\n                onEditorChange={this.handleEditorChange}\n              />\n            </div>\n            <button\n              id=\"submit\"\n              type=\"submit\"\n              name=\"submit\"\n              onClick={this.updateLink}\n            >\n              Update\n            </button>\n          </form>\n          <ToastContainer />\n        </div>\n      </div>\n    );\n  }\n}\n\nForm.propTypes = {\n  client: PropTypes.object,\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Form from \"./components/Form\";\n\nfunction App(props) {\n  return (\n    <Router>\n      <Switch>\n        <Route\n          path=\"/link/:id\"\n          render={({ match }) => <Form id={match.params.id} />}\n        />\n        <Route\n          path=\"/:id\"\n          render={({ match }) => <Form id={match.params.id} />}\n        />\n        <Route path=\"/\" render={() => <Form id=\"0\" />} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}